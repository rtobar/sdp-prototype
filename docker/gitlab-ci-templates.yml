# Build a two stage image where first stage is tagged as 'buildenv'
#
# Requires the following variables to have been defined.
#   MODULE_PATH:
#   IMAGE_NAME:
#   IMAGE_TAG:
#
.docker-two-stage-build:
  stage: build
  tags:
    - docker
    - engageska
  image: docker:stable
  services:
    - docker:dind
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
    DOCKER_REGISTRY_HOST: $DOCKER_REGISTRY_HOST
    DOCKER_REGISTRY_USER: $CI_PROJECT_NAME
  before_script:
    - apk add git
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - cd $MODULE_PATH
    # Build buildenv stage. tagged with `-buildenv`
    - docker pull $IMAGE-buildenv || true
    - docker build --pull
      --cache-from $IMAGE-buildenv
      --build-arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST
      --build-arg DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER
      --target buildenv -t $IMAGE-buildenv .
    - docker push $IMAGE-buildenv
    # Build final stage image tagged with `-test` suffix
    - docker pull $IMAGE-test || true
    - docker build --pull
      --cache-from $IMAGE-buildenv
      --cache-from $IMAGE-test
      --build-arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST
      --build-arg DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER
      -t $IMAGE-test .
    - docker push $IMAGE-test

# Run tests within a built docker image
# Expects variables to be defined:
#    IMAGE_NAME
#    IMAGE_TAG
.docker-test-image:
  stage: test_build
  tags:
    - docker
  variables:
    IMAGE: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
  image: $IMAGE-test


# Push a docker image to nexus
# Expects variables to be defined:
#    IMAGE_NAME
#    IMAGE_TAG
.docker-push-image:
  stage: publish
  tags:
    - docker
    - engageska
  variables:
    GIT_STRATEGY: none
    IMAGE: $CI_REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG
    NEXUS_IMAGE: $DOCKER_REGISTRY_HOST/$CI_PROJECT_NAME/$IMAGE_NAME
  image: docker:stable
  services:
    - docker:dind
  before_script:
    # Log into the nexus repo.
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  script:
    - docker pull $IMAGE-test
    - docker tag $IMAGE-test $NEXUS_IMAGE:latest
    - docker tag $IMAGE-test $NEXUS_IMAGE:$IMAGE_TAG
    - docker image ls
    - docker push $NEXUS_IMAGE:$IMAGE_TAG
    - docker push $NEXUS_IMAGE:latest

# Logic to run a job only when there is changes to files in the specified
# $MODULE_PATH
# Expects $MODULE_PATH to have been already set in variables.
.when-docker-image-changes:
  only:
    # There currently seems to be an issue with paths in 'only:changes' see:
    # https://gitlab.com/gitlab-org/gitlab-ce/issues/55570
    # Using docker/**/* works but is a catch all for all files in the docker
    # directory.
    # For now please override only:changes from this template in the
    # local job definition.
    changes:
      - docker/**/*
#      - $MODULE_PATH/Dockerfile
#      - $MODULE_PATH/Pipfile
#      - $MODULE_PATH/Pipfile.lock
#      - $MODULE_PATH/../.gitlab-ci-jobs.yml
#      - $MODULE_PATH/../../.gitlab-ci-jobs.yml
  except:
    refs:
      - tags

# Logic to run a job only when there is a tag matching the pattern:
# <image name>-<image tag>
.when-docker-image-tagged:
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^tags/($IMAGE_NAME)==($IMAGE_TAG)$/
